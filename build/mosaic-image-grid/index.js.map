{"version":3,"file":"mosaic-image-grid/index.js","mappings":"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","sources":["webpack://tailpress/./src/mosaic-image-grid/edit.js","webpack://tailpress/external window \"ReactJSXRuntime\"","webpack://tailpress/external window [\"wp\",\"blockEditor\"]","webpack://tailpress/external window [\"wp\",\"blocks\"]","webpack://tailpress/external window [\"wp\",\"components\"]","webpack://tailpress/webpack/bootstrap","webpack://tailpress/webpack/runtime/compat get default export","webpack://tailpress/webpack/runtime/define property getters","webpack://tailpress/webpack/runtime/hasOwnProperty shorthand","webpack://tailpress/webpack/runtime/make namespace object","webpack://tailpress/./src/mosaic-image-grid/index.js"],"sourcesContent":["import { useBlockProps, MediaUpload, MediaPlaceholder, BlockControls, InspectorControls } from '@wordpress/block-editor';\r\nimport { Button, ToolbarGroup, ToolbarButton, PanelBody, PanelRow, SelectControl, RangeControl, TextControl } from '@wordpress/components';\r\n\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    const blockProps = useBlockProps();\r\n    const { images = [], mosaicLayout, columns, gap } = attributes;\r\n\r\n    const addImage = (media) => {\r\n        setAttributes({\r\n            images: [...images, {\r\n                url: media.url,\r\n                id: media.id,\r\n                alt: media.alt || 'Our beautiful image',\r\n                caption: '', // Initialize caption as an empty string\r\n            }],\r\n        });\r\n    };\r\n\r\n    const removeImage = (index) => {\r\n        const newImages = images.filter((_, i) => i !== index);\r\n        setAttributes({ images: newImages });\r\n    };\r\n\r\n    const updateImage = (index, media) => {\r\n        const newImages = images.map((img, i) => i === index ? {\r\n            ...img,\r\n            url: media.url,\r\n            id: media.id,\r\n            alt: media.alt || 'Our beautiful image',\r\n        } : img);\r\n        setAttributes({ images: newImages });\r\n    };\r\n\r\n    const updateCaption = (index, caption) => {\r\n        const newImages = images.map((img, i) => i === index ? {\r\n            ...img,\r\n            caption: caption,\r\n        } : img);\r\n        setAttributes({ images: newImages });\r\n    };\r\n\r\n    const mosaicPattern = [\r\n        { gridColumn: '1 / span 3', gridRow: '1 / span 5' },\r\n        { gridColumn: '3 / span 7', gridRow: '1 / span 3' },\r\n        { gridColumn: '3 / span 5', gridRow: '3 / span 5' },\r\n        { gridColumn: '5 / span 7', gridRow: '3 / span 7' },\r\n        { gridColumn: '1 / span 5', gridRow: '5 / span 7' },\r\n\r\n        // Add more patterns as needed\r\n    ];\r\n\r\n    return (\r\n        <div {...blockProps}>\r\n            <BlockControls>\r\n                <ToolbarGroup>\r\n                    <MediaUpload\r\n                        onSelect={addImage}\r\n                        allowedTypes={['image']}\r\n                        render={({ open }) => (\r\n                            <ToolbarButton\r\n                                icon=\"plus\"\r\n                                label=\"Add Image\"\r\n                                onClick={open}\r\n                            />\r\n                        )}\r\n                    />\r\n                </ToolbarGroup>\r\n            </BlockControls>\r\n            <InspectorControls>\r\n                <PanelBody title=\"Image Settings\" initialOpen={true}>\r\n                    <PanelRow>\r\n                        <MediaUpload\r\n                            onSelect={addImage}\r\n                            allowedTypes={['image']}\r\n                            render={({ open }) => (\r\n                                <Button\r\n                                    style={{ width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n                                    isPrimary\r\n                                    onClick={open}\r\n                                >\r\n                                    Add Image\r\n                                </Button>\r\n                            )}\r\n                        />\r\n                    </PanelRow>\r\n\r\n                    {images.map((image, index) => (\r\n                        <PanelRow key={index}>\r\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                <img src={image.url} alt={image.alt} style={{ width: '100%', height: 'auto', objectFit: 'cover', marginBottom: '10px' }} />\r\n                                <MediaUpload\r\n                                    onSelect={(media) => updateImage(index, media)}\r\n                                    allowedTypes={['image']}\r\n                                    value={image.id}\r\n                                    render={({ open }) => (\r\n                                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 2, width: '100%' }}>\r\n                                            <Button\r\n                                                isPrimary\r\n                                                onClick={open}\r\n                                                style={{ width: '90%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n                                            >\r\n                                                Edit Image\r\n                                            </Button>\r\n                                            <Button\r\n                                                onClick={() => removeImage(index)}\r\n                                                style={{ width: '90%', display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: 'red', color: 'white' }}\r\n                                            >\r\n                                                Remove Image\r\n                                            </Button>\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                                <TextControl\r\n                                    label=\"Caption\"\r\n                                    value={image.caption}\r\n                                    onChange={(value) => updateCaption(index, value)}\r\n                                />\r\n                            </div>\r\n                        </PanelRow>\r\n                    ))}\r\n                </PanelBody>\r\n                <PanelBody title=\"Mosaic Settings\" initialOpen={true}>\r\n                    <SelectControl\r\n                        label=\"Layout\"\r\n                        value={mosaicLayout}\r\n                        options={[\r\n                            { label: 'Grid', value: 'grid' },\r\n                            { label: 'Masonry', value: 'masonry' },\r\n                            { label: 'Mosaic', value: 'mosaic' }, // Add mosaic option\r\n                        ]}\r\n                        onChange={(value) => setAttributes({ mosaicLayout: value })}\r\n                    />\r\n                    <RangeControl\r\n                        label=\"Columns\"\r\n                        value={columns}\r\n                        onChange={(value) => setAttributes({ columns: value })}\r\n                        min={1}\r\n                        max={6}\r\n                    />\r\n                    <RangeControl\r\n                        label=\"Gap (px)\"\r\n                        value={gap}\r\n                        onChange={(value) => setAttributes({ gap: value })}\r\n                        min={0}\r\n                        max={50}\r\n                    />\r\n                </PanelBody>\r\n            </InspectorControls>\r\n            <div style={{\r\n                display: mosaicLayout === 'grid' ? 'grid' : mosaicLayout === 'mosaic' ? 'grid' : 'block',\r\n                gridTemplateColumns: mosaicLayout === 'mosaic' ? 'repeat(6, 1fr)' : `repeat(${columns}, 1fr)`,\r\n                gridAutoRows: mosaicLayout === 'mosaic' ? 'minmax(150px, auto)' : 'auto',\r\n                maxWidth: mosaicLayout === 'mosaic' ? '960px' : 'none',\r\n                margin: mosaicLayout === 'mosaic' ? '0 auto' : '0',\r\n                gap: `${gap}px`\r\n            }}>\r\n                {images.map((image, index) => {\r\n                    const pattern = mosaicPattern[index % mosaicPattern.length];\r\n                    return (\r\n                        <div\r\n                            key={index}\r\n                            style={{\r\n                                gridColumn: mosaicLayout === 'mosaic' ? pattern.gridColumn : 'span 1',\r\n                                gridRow: mosaicLayout === 'mosaic' ? pattern.gridRow : 'span 1',\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center'\r\n                            }}\r\n                        >\r\n                            <img src={image.url} alt={image.alt} style={{ width: '100%', height: 'auto', objectFit: 'cover' }} />\r\n                            {image.caption && <p style={{ textAlign: 'center', marginTop: '5px' }}>{image.caption}</p>}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { InnerBlocks } from \"@wordpress/block-editor\"\nimport { registerBlockType } from \"@wordpress/blocks\"\nimport metadata from \"./block.json\"\nimport Edit from \"./edit\"\n\nregisterBlockType(metadata.name, {\n  edit: Edit,\n  save: function () {\n    return <InnerBlocks.Content />\n  }\n})\n"],"names":["useBlockProps","MediaUpload","MediaPlaceholder","BlockControls","InspectorControls","Button","ToolbarGroup","ToolbarButton","PanelBody","PanelRow","SelectControl","RangeControl","TextControl","jsx","_jsx","jsxs","_jsxs","Edit","attributes","setAttributes","blockProps","images","mosaicLayout","columns","gap","addImage","media","url","id","alt","caption","removeImage","index","newImages","filter","_","i","updateImage","map","img","updateCaption","mosaicPattern","gridColumn","gridRow","children","onSelect","allowedTypes","render","open","icon","label","onClick","title","initialOpen","style","width","display","justifyContent","alignItems","isPrimary","image","flexDirection","src","height","objectFit","marginBottom","value","backgroundColor","color","onChange","options","min","max","gridTemplateColumns","gridAutoRows","maxWidth","margin","pattern","length","textAlign","marginTop","InnerBlocks","registerBlockType","metadata","name","edit","save","Content"],"sourceRoot":""}