{"version":3,"file":"menu-list/index.js","mappings":"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","sources":["webpack://tailpress/./src/menu-list/inspectorControls.js","webpack://tailpress/external window \"ReactJSXRuntime\"","webpack://tailpress/external window [\"wp\",\"blockEditor\"]","webpack://tailpress/external window [\"wp\",\"blocks\"]","webpack://tailpress/external window [\"wp\",\"components\"]","webpack://tailpress/webpack/bootstrap","webpack://tailpress/webpack/runtime/compat get default export","webpack://tailpress/webpack/runtime/define property getters","webpack://tailpress/webpack/runtime/hasOwnProperty shorthand","webpack://tailpress/webpack/runtime/make namespace object","webpack://tailpress/./src/menu-list/index.js"],"sourcesContent":["// inspectorControls.js\r\nimport { PanelBody, TextControl, SelectControl } from '@wordpress/components';\r\nimport { InspectorControls } from '@wordpress/block-editor';\r\n\r\nconst CustomInspectorControls = ({ attributes, setAttributes }) => {\r\n  return (\r\n    <InspectorControls>\r\n      <PanelBody title=\"Settings\" initialOpen={true}>\r\n      <SelectControl\r\n          label=\"Align heading\"\r\n          value={attributes.HeadlineAlignment}\r\n          options={[\r\n            { label: 'Left', value: 'left' },\r\n            { label: 'Center', value: 'center' },\r\n            { label: 'Right', value: 'right' },\r\n          ]}\r\n          onChange={(align) => setAttributes({ align })}\r\n        />\r\n        <TextControl\r\n          label=\"Title\"\r\n          value={attributes.title} // Bind the title attribute\r\n          onChange={(title) => setAttributes({ title })} // Update title on change\r\n          placeholder=\"Enter your title...\"\r\n        />\r\n        <SelectControl\r\n          label=\"Text Alignment\"\r\n          value={attributes.align}\r\n          options={[\r\n            { label: 'Left', value: 'left' },\r\n            { label: 'Center', value: 'center' },\r\n            { label: 'Right', value: 'right' },\r\n          ]}\r\n          onChange={(align) => setAttributes({ align })}\r\n        />\r\n      </PanelBody>\r\n    </InspectorControls>\r\n  );\r\n};\r\n\r\nexport default CustomInspectorControls;\r\n","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\r\nimport { useBlockProps, InnerBlocks, RichText } from \"@wordpress/block-editor\";\r\nimport metadata from \"./block.json\";\r\nimport CustomInspectorControls from \"./inspectorControls\";\r\n\r\nconst Edit = ({ attributes, setAttributes }) => {\r\n  const blockProps = useBlockProps({\r\n    style: {\r\n      textAlign: attributes.align,\r\n    },\r\n    id: attributes.anchor ? attributes.anchor : undefined,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <CustomInspectorControls attributes={attributes} setAttributes={setAttributes} />\r\n      <div {...blockProps}>\r\n        <RichText\r\n          tagName=\"h2\"\r\n          value={attributes.title}\r\n          onChange={(title) => setAttributes({ title })}\r\n          placeholder={('Add title...')}\r\n          style={{ textAlign: attributes.HeadlineAlignment }} \r\n        />\r\n        <InnerBlocks allowedBlocks={['custom/day-item']} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst save = ({ attributes }) => {\r\n  return (\r\n    <div>\r\n      <RichText.Content tagName=\"h2\" value={attributes.title} style={{ textAlign: attributes.HeadlineAlignment }} />\r\n      <InnerBlocks.Content />\r\n    </div>\r\n  );\r\n};\r\n\r\nregisterBlockType(metadata.name, {\r\n  edit: Edit,\r\n  save,\r\n});\r\n"],"names":["PanelBody","TextControl","SelectControl","InspectorControls","jsx","_jsx","jsxs","_jsxs","CustomInspectorControls","attributes","setAttributes","children","title","initialOpen","label","value","HeadlineAlignment","options","onChange","align","placeholder","registerBlockType","useBlockProps","InnerBlocks","RichText","metadata","Fragment","_Fragment","Edit","blockProps","style","textAlign","id","anchor","undefined","tagName","allowedBlocks","save","Content","name","edit"],"sourceRoot":""}