{"version":3,"file":"day-item/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACoG;AAC3B;AAAA;AAGzE,MAAMW,uBAAuB,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAGjE,oBACEL,sDAAA,CAAAE,uDAAA;IAAAI,QAAA,eACEN,sDAAA,CAACH,sEAAiB;MAAAS,QAAA,eAChBN,sDAAA,CAACR,4DAAS;QAACe,KAAK,EAAC,WAAW;QAACC,WAAW,EAAE,IAAK;QAAAF,QAAA,eAC7CN,sDAAA,CAACF,gEAAW,CAACW,mBAAmB,IAAE;MAAC,CAC1B;IAAC,CAGK;EAAC,CAEpB,CAAC;AAEP,CAAC;AAED,iEAAeN,uBAAuB;;;;;;;;;;ACtBtC;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACN+E;AACzB;AACjB;AACD;AACsB;AAAA;AAE1D,MAAMc,IAAI,GAAGA,CAAC;EAAEb,UAAU;EAAEC;AAAc,CAAC,KAAK;EAC9C,MAAMa,UAAU,GAAGR,sEAAa,CAAC,CAAC;EAElC,MAAMS,WAAW,GAAIC,GAAG,IAAK;IAC3Bf,aAAa,CAAC;MAAEe;IAAI,CAAC,CAAC;EACxB,CAAC;EAED,oBACEJ,uDAAA,CAAAd,uDAAA;IAAAI,QAAA,gBACAN,sDAAA,CAACG,0DAAuB;MAACC,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc,CAAE,CAAC,eACjFW,uDAAA;MAAA,GAASE,UAAU;MAAAZ,QAAA,gBACjBN,sDAAA,CAACW,6DAAQ;QACPU,OAAO,EAAC,IAAI,CAAC;QAAA;QACbC,KAAK,EAAElB,UAAU,CAACgB,GAAI;QACtBG,QAAQ,EAAEJ,WAAY;QACtBK,WAAW,EAAC;MAAY,CACzB,CAAC,eACFxB,sDAAA,CAACF,gEAAW;QACV2B,aAAa,EAAE,CAAC,kBAAkB,CAAE,CAAC;QAAA;QACrCC,QAAQ,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAE,CAAC;MAAA,CACnC,CAAC;IAAA,CACC,CAAC;EAAA,CACJ,CAAC;AAEP,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAC;EAAEvB;AAAW,CAAC,KAAK;EAC/B,oBACEY,uDAAA;IAAAV,QAAA,gBACEN,sDAAA,CAACW,6DAAQ,CAACiB,OAAO;MAACP,OAAO,EAAC,IAAI;MAACC,KAAK,EAAElB,UAAU,CAACgB;IAAI,CAAE,CAAC,eACxDpB,sDAAA,CAACF,gEAAW,CAAC8B,OAAO,IAAE,CAAC;EAAA,CACpB,CAAC;AAEV,CAAC;AAEDhB,oEAAiB,CAACE,6CAAa,EAAE;EAC/BgB,IAAI,EAAEb,IAAI;EACVU,IAAI;EACJI,mBAAmB,EAAEA,CAAC3B,UAAU,EAAE;IAAE4B;EAAQ,CAAC,KAAK;IAChD,OAAOA,OAAO,KAAK,WAAW,IAAI5B,UAAU,CAACgB,GAAG,GAC5ChB,UAAU,CAACgB,GAAG,GACdP,mDAAE,CAAC,WAAW,CAAC;EACrB;AACF,CAAC,CAAC,C","sources":["webpack://tailpress/./src/day-item/inspectorControls.js","webpack://tailpress/external window \"ReactJSXRuntime\"","webpack://tailpress/external window [\"wp\",\"blockEditor\"]","webpack://tailpress/external window [\"wp\",\"blocks\"]","webpack://tailpress/external window [\"wp\",\"components\"]","webpack://tailpress/external window [\"wp\",\"i18n\"]","webpack://tailpress/webpack/bootstrap","webpack://tailpress/webpack/runtime/compat get default export","webpack://tailpress/webpack/runtime/define property getters","webpack://tailpress/webpack/runtime/hasOwnProperty shorthand","webpack://tailpress/webpack/runtime/make namespace object","webpack://tailpress/./src/day-item/index.js"],"sourcesContent":["// inspectorControls.js\r\nimport { PanelBody, TextControl, SelectControl, RangeControl, Button } from '@wordpress/components';\r\nimport { InspectorControls, InnerBlocks } from '@wordpress/block-editor';\r\n\r\n\r\nconst CustomInspectorControls = ({ attributes, setAttributes }) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <InspectorControls>\r\n        <PanelBody title=\"Add block\" initialOpen={true}>\r\n          <InnerBlocks.ButtonBlockAppender />\r\n        </PanelBody>\r\n\r\n\r\n      </InspectorControls>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomInspectorControls;\r\n","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useBlockProps, RichText, InnerBlocks } from \"@wordpress/block-editor\";\r\nimport { registerBlockType } from \"@wordpress/blocks\";\r\nimport { __ } from '@wordpress/i18n';\r\nimport metadata from \"./block.json\";\r\nimport CustomInspectorControls from \"./inspectorControls\";\r\n\r\nconst Edit = ({ attributes, setAttributes }) => {\r\n  const blockProps = useBlockProps();\r\n\r\n  const onChangeDay = (day) => {\r\n    setAttributes({ day });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <CustomInspectorControls attributes={attributes} setAttributes={setAttributes} />\r\n    <div {...blockProps}>\r\n      <RichText\r\n        tagName=\"h3\" // Change tag to h3 for the day heading\r\n        value={attributes.day}\r\n        onChange={onChangeDay}\r\n        placeholder=\"Add day...\"\r\n      />\r\n      <InnerBlocks \r\n        allowedBlocks={['custom/dish-item']} // Only allow dish-item blocks\r\n        template={[['custom/dish-item']]} // Optional: start with a dish-item block\r\n      />\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst save = ({ attributes }) => {\r\n  return (\r\n    <div>\r\n      <RichText.Content tagName=\"h3\" value={attributes.day} />\r\n      <InnerBlocks.Content />\r\n    </div>\r\n  );\r\n};\r\n\r\nregisterBlockType(metadata.name, {\r\n  edit: Edit,\r\n  save,\r\n  __experimentalLabel: (attributes, { context }) => {\r\n    return context === 'list-view' && attributes.day \r\n      ? attributes.day \r\n      : __('Dish Item');\r\n  },\r\n});\r\n"],"names":["PanelBody","TextControl","SelectControl","RangeControl","Button","InspectorControls","InnerBlocks","jsx","_jsx","Fragment","_Fragment","CustomInspectorControls","attributes","setAttributes","children","title","initialOpen","ButtonBlockAppender","useBlockProps","RichText","registerBlockType","__","metadata","jsxs","_jsxs","Edit","blockProps","onChangeDay","day","tagName","value","onChange","placeholder","allowedBlocks","template","save","Content","name","edit","__experimentalLabel","context"],"sourceRoot":""}